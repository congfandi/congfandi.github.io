I"‰V<p>Halo sobat ngoding semuanya, kali ini saya ingin berbagi tentang cara simple menggunakan <a href="">SQFLITE</a> pada flutter. <a href="">SQFLITE</a> pada dasarnya sama seperti SQLITE pada android dan IOS.. cara penggunaannyapun sama yaitu menyimpan data kompleks di local. Jika kalian ingin membaca referensinya, silahkan buka <a href="https://pub.dev/packages/sqflite/example">CONTOH</a> ini untuk mempelajari lebih lanjut.</p>

<p>Oke, Kita mulai saja tutorial kita pada kali ini :</p>

<h1 id="1-pasang-library-sqflite">1. Pasang Library SQFLITE</h1>

<p>version : <a href="https://pub.dev/packages/sqflite/install">sqflite: ^1.3.1+1</a> atau klik link untuk mendapatkan yang paling baru,</p>

<h1 id="2-buat-folder">2. Buat Folder</h1>

<p>Pada folder <em>lib</em> tambahkan beberapa folder, hal ini agar kita mudah memaintanance aja sih, kalian tidak membuatnya pun juga tidak masalah. truktur foldernya bisa kalian lihat pada gambar dibawah ini</p>

<p><img src="http://localhost:4000/assets/img/200914/folder.png" alt="fodlder" /></p>

<h1 id="3-buat-kelas-query-dari-masing-masing-table-yang-akan-dibuat">3. Buat Kelas QUERY dari masing masing table yang akan dibuat</h1>

<p>Pada bagian ini, kita akan membuat sebuah kelas query dari JSON yang nantinya akan kita buat sebagai model juga berikut JSON nya.</p>

<p>JSON User</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">    </span><span class="p">{</span><span class="w">
        </span><span class="nl">"id"</span><span class="p">:</span><span class="mi">123</span><span class="p">,</span><span class="w">
        </span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"congfandi"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"address"</span><span class="p">:</span><span class="s2">"Pamekasan, Madura"</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>JSON Country</p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">    </span><span class="p">{</span><span class="w">
        </span><span class="nl">"id"</span><span class="p">:</span><span class="mi">123</span><span class="p">,</span><span class="w">
        </span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"indonesia"</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p><em>Pastikan model dan query untuk membuat tablenya sama ya guys agar nanti dapat di casting dengan mudah menjadi sebuah model</em></p>

<p><em>class UserQuery</em></p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">UserQuery</span> <span class="o">{</span>
  <span class="kd">static</span> <span class="kd">const</span> <span class="kt">String</span> <span class="n">TABLE_NAME</span> <span class="o">=</span> <span class="s">"users"</span><span class="o">;</span>
  <span class="kd">static</span> <span class="kd">const</span> <span class="kt">String</span> <span class="n">CREATE_TABLE</span> <span class="o">=</span>
      <span class="s">" CREATE TABLE IF NOT EXISTS </span><span class="si">$TABLE_NAME</span><span class="s"> ( id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT , address TEXT ) "</span><span class="o">;</span>
  <span class="kd">static</span> <span class="kd">const</span> <span class="kt">String</span> <span class="n">SELECT</span> <span class="o">=</span> <span class="s">"select * from </span><span class="si">$TABLE_NAME</span><span class="s">"</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<p><em>class User</em></p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">User</span> <span class="o">{</span>
    <span class="kt">String</span> <span class="n">address</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">id</span><span class="o">;</span>
    <span class="kt">String</span> <span class="n">name</span><span class="o">;</span>

    <span class="n">User</span><span class="o">({</span><span class="k">this</span><span class="o">.</span><span class="na">address</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">id</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">});</span>

    <span class="kd">factory</span> <span class="n">User</span><span class="o">.</span><span class="na">fromJson</span><span class="o">(</span><span class="n">Map</span><span class="o">&lt;</span><span class="kt">String</span><span class="o">,</span> <span class="kd">dynamic</span><span class="o">&gt;</span> <span class="n">json</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">User</span><span class="o">(</span>
            <span class="nl">address:</span> <span class="n">json</span><span class="o">[</span><span class="s">'address'</span><span class="o">],</span> 
            <span class="nl">id:</span> <span class="n">json</span><span class="o">[</span><span class="s">'id'</span><span class="o">],</span> 
            <span class="nl">name:</span> <span class="n">json</span><span class="o">[</span><span class="s">'name'</span><span class="o">],</span> 
        <span class="o">);</span>
    <span class="o">}</span>

    <span class="n">Map</span><span class="o">&lt;</span><span class="kt">String</span><span class="o">,</span> <span class="kd">dynamic</span><span class="o">&gt;</span> <span class="n">toJson</span><span class="o">()</span> <span class="o">{</span>
        <span class="kd">final</span> <span class="n">Map</span><span class="o">&lt;</span><span class="kt">String</span><span class="o">,</span> <span class="kd">dynamic</span><span class="o">&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Map</span><span class="o">&lt;</span><span class="kt">String</span><span class="o">,</span> <span class="kd">dynamic</span><span class="o">&gt;();</span>
        <span class="n">data</span><span class="o">[</span><span class="s">'address'</span><span class="o">]</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">address</span><span class="o">;</span>
        <span class="n">data</span><span class="o">[</span><span class="s">'id'</span><span class="o">]</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">id</span><span class="o">;</span>
        <span class="n">data</span><span class="o">[</span><span class="s">'name'</span><span class="o">]</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">;</span>
        <span class="k">return</span> <span class="n">data</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p><em>class Country Query</em></p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">CountryQuery</span> <span class="o">{</span>
  <span class="kd">static</span> <span class="kd">const</span> <span class="kt">String</span> <span class="n">TABLE_NAME</span> <span class="o">=</span> <span class="s">"countries"</span><span class="o">;</span>
  <span class="kd">static</span> <span class="kd">const</span> <span class="kt">String</span> <span class="n">CREATE_TABLE</span> <span class="o">=</span>
      <span class="s">" CREATE TABLE IF NOT EXISTS </span><span class="si">$TABLE_NAME</span><span class="s"> ( id INTEGER PRIMARY KEY AUTOINCREMENT, NAME TEXT ) "</span><span class="o">;</span>
  <span class="kd">static</span> <span class="kd">const</span> <span class="kt">String</span> <span class="n">SELECT</span> <span class="o">=</span> <span class="s">"select * from </span><span class="si">$TABLE_NAME</span><span class="s">"</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<p><em>Class Country</em></p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Country</span> <span class="o">{</span>
    <span class="kt">int</span> <span class="n">id</span><span class="o">;</span>
    <span class="kt">String</span> <span class="n">name</span><span class="o">;</span>

    <span class="n">Country</span><span class="o">({</span><span class="k">this</span><span class="o">.</span><span class="na">id</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">});</span>

    <span class="kd">factory</span> <span class="n">Country</span><span class="o">.</span><span class="na">fromJson</span><span class="o">(</span><span class="n">Map</span><span class="o">&lt;</span><span class="kt">String</span><span class="o">,</span> <span class="kd">dynamic</span><span class="o">&gt;</span> <span class="n">json</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">Country</span><span class="o">(</span>
            <span class="nl">id:</span> <span class="n">json</span><span class="o">[</span><span class="s">'id'</span><span class="o">],</span> 
            <span class="nl">name:</span> <span class="n">json</span><span class="o">[</span><span class="s">'NAME'</span><span class="o">],</span>
        <span class="o">);</span>
    <span class="o">}</span>

    <span class="n">Map</span><span class="o">&lt;</span><span class="kt">String</span><span class="o">,</span> <span class="kd">dynamic</span><span class="o">&gt;</span> <span class="n">toJson</span><span class="o">()</span> <span class="o">{</span>
        <span class="kd">final</span> <span class="n">Map</span><span class="o">&lt;</span><span class="kt">String</span><span class="o">,</span> <span class="kd">dynamic</span><span class="o">&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Map</span><span class="o">&lt;</span><span class="kt">String</span><span class="o">,</span> <span class="kd">dynamic</span><span class="o">&gt;();</span>
        <span class="n">data</span><span class="o">[</span><span class="s">'id'</span><span class="o">]</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">id</span><span class="o">;</span>
        <span class="n">data</span><span class="o">[</span><span class="s">'NAME'</span><span class="o">]</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">;</span>
        <span class="k">return</span> <span class="n">data</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>pastikan sama dengan yang aku buat ya,, kalau udah bisa baru deh kalian bisa eksplorasi.</p>

<h1 id="4-buat-kelas-dbhelper">4. Buat Kelas DbHelper</h1>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="kn">import</span> <span class="s">'package:flutter_atomic_design/database/queries/country_query.dart'</span><span class="o">;</span>
<span class="kn">import</span> <span class="s">'package:flutter_atomic_design/database/queries/user_query.dart'</span><span class="o">;</span>
<span class="kn">import</span> <span class="s">'package:sqflite/sqflite.dart'</span> <span class="k">as</span> <span class="n">sqlite</span><span class="o">;</span>
<span class="kn">import</span> <span class="s">'package:sqflite/sqlite_api.dart'</span><span class="o">;</span>
<span class="kn">import</span> <span class="s">'package:path/path.dart'</span> <span class="k">as</span> <span class="n">path</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">DbHelper</span> <span class="o">{</span>
  <span class="c1">//membuat method singleton</span>
  <span class="kd">static</span> <span class="n">DbHelper</span> <span class="n">_dbHelper</span> <span class="o">=</span> <span class="n">DbHelper</span><span class="o">.</span><span class="na">_singleton</span><span class="o">();</span>

  <span class="kd">factory</span> <span class="n">DbHelper</span><span class="o">()</span> <span class="o">{</span>
    <span class="k">return</span> <span class="n">_dbHelper</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="n">DbHelper</span><span class="o">.</span><span class="na">_singleton</span><span class="o">();</span>

  <span class="c1">//baris terakhir singleton</span>

  <span class="kd">final</span> <span class="n">tables</span> <span class="o">=</span> <span class="o">[</span>
    <span class="n">UserQuery</span><span class="o">.</span><span class="na">CREATE_TABLE</span><span class="o">,</span>
    <span class="n">CountryQuery</span><span class="o">.</span><span class="na">CREATE_TABLE</span>
  <span class="o">];</span> <span class="c1">// membuat daftar table yang akan dibuat</span>

  <span class="n">Future</span><span class="o">&lt;</span><span class="n">Database</span><span class="o">&gt;</span> <span class="n">openDB</span><span class="o">()</span> <span class="n">async</span> <span class="o">{</span>
    <span class="kd">final</span> <span class="n">dbPath</span> <span class="o">=</span> <span class="n">await</span> <span class="n">sqlite</span><span class="o">.</span><span class="na">getDatabasesPath</span><span class="o">();</span>
    <span class="k">return</span> <span class="n">sqlite</span><span class="o">.</span><span class="na">openDatabase</span><span class="o">(</span><span class="n">path</span><span class="o">.</span><span class="na">join</span><span class="o">(</span><span class="n">dbPath</span><span class="o">,</span> <span class="s">'thengoding.db'</span><span class="o">),</span>
        <span class="nl">onCreate:</span> <span class="o">(</span><span class="n">db</span><span class="o">,</span> <span class="n">version</span><span class="o">)</span> <span class="o">{</span>
      <span class="n">tables</span><span class="o">.</span><span class="na">forEach</span><span class="o">((</span><span class="n">table</span><span class="o">)</span> <span class="n">async</span> <span class="o">{</span>
        <span class="n">await</span> <span class="n">db</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">table</span><span class="o">).</span><span class="na">then</span><span class="o">((</span><span class="n">value</span><span class="o">)</span> <span class="o">{</span>
          <span class="n">print</span><span class="o">(</span><span class="s">"berashil "</span><span class="o">);</span>
        <span class="o">}).</span><span class="na">catchError</span><span class="o">((</span><span class="n">err</span><span class="o">)</span> <span class="o">{</span>
          <span class="n">print</span><span class="o">(</span><span class="s">"errornya </span><span class="si">${err.toString()}</span><span class="s">"</span><span class="o">);</span>
        <span class="o">});</span>
      <span class="o">});</span>
      <span class="n">print</span><span class="o">(</span><span class="s">'Table Created'</span><span class="o">);</span>
    <span class="o">},</span> <span class="nl">version:</span> <span class="mi">1</span><span class="o">);</span>
  <span class="o">}</span>

  <span class="n">insert</span><span class="o">(</span><span class="kt">String</span> <span class="n">table</span><span class="o">,</span> <span class="n">Map</span><span class="o">&lt;</span><span class="kt">String</span><span class="o">,</span> <span class="kt">Object</span><span class="o">&gt;</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">openDB</span><span class="o">().</span><span class="na">then</span><span class="o">((</span><span class="n">db</span><span class="o">)</span> <span class="o">{</span>
      <span class="n">db</span><span class="o">.</span><span class="na">insert</span><span class="o">(</span><span class="n">table</span><span class="o">,</span> <span class="n">data</span><span class="o">,</span> <span class="nl">conflictAlgorithm:</span> <span class="n">ConflictAlgorithm</span><span class="o">.</span><span class="na">replace</span><span class="o">);</span>
    <span class="o">}).</span><span class="na">catchError</span><span class="o">((</span><span class="n">err</span><span class="o">)</span> <span class="o">{</span>
      <span class="n">print</span><span class="o">(</span><span class="s">"error </span><span class="si">$err</span><span class="s">"</span><span class="o">);</span>
    <span class="o">});</span>
  <span class="o">}</span>

  <span class="n">Future</span><span class="o">&lt;</span><span class="n">List</span><span class="o">&gt;</span> <span class="n">getData</span><span class="o">(</span><span class="kt">String</span> <span class="n">tableName</span><span class="o">)</span> <span class="n">async</span> <span class="o">{</span>
    <span class="kd">final</span> <span class="n">db</span> <span class="o">=</span> <span class="n">await</span> <span class="n">openDB</span><span class="o">();</span>
    <span class="kd">var</span> <span class="n">result</span> <span class="o">=</span> <span class="n">await</span> <span class="n">db</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">tableName</span><span class="o">);</span>
    <span class="k">return</span> <span class="n">result</span><span class="o">.</span><span class="na">toList</span><span class="o">();</span>
  <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h1 id="5-testing-dbhelper-dengan-insert">5. Testing DbHelper dengan Insert</h1>

<p>Untuk melakukan testing database, silahkan temen2 panggil dimain class seperti code dibawah ini</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="kd">final</span> <span class="n">DbHelper</span> <span class="n">_helper</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DbHelper</span><span class="o">();</span>
  <span class="nd">@override</span>
  <span class="kt">void</span> <span class="n">initState</span><span class="o">()</span> <span class="o">{</span>
    <span class="k">super</span><span class="o">.</span><span class="na">initState</span><span class="o">();</span>
    <span class="n">_helper</span><span class="o">.</span><span class="na">insert</span><span class="o">(</span><span class="n">CountryQuery</span><span class="o">.</span><span class="na">TABLE_NAME</span><span class="o">,</span> <span class="o">{</span><span class="s">"NAME"</span><span class="o">:</span><span class="s">"Singapura"</span><span class="o">});</span>
  <span class="o">}</span>
</code></pre></div></div>

<p>dan apabila ada terlihat tulisan berhasil seperti gambar dibawah artinya table sudah berhasil dibuat dan data sudah berhasil di insert ke local db kita..</p>

<p><em>Noted</em> Ini hanya muncul sekali apabila table belum dibuat ya.. jika table sudah terbuat sebelumnya, dia tidak akan muncul lagi.</p>

<p><img src="http://localhost:4000/assets/img/200914/create.png" alt="inser" /></p>

<h1 id="6-print-data-yang-sudah-kesimpan">6. Print data yang sudah kesimpan</h1>
<p>Untuk melihat hasilnya,, silahkan ganti code untuk insert menjadi seperti dibawah ini</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="kd">final</span> <span class="n">DbHelper</span> <span class="n">_helper</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DbHelper</span><span class="o">();</span>

  <span class="nd">@override</span>
  <span class="kt">void</span> <span class="n">initState</span><span class="o">()</span> <span class="o">{</span>
    <span class="k">super</span><span class="o">.</span><span class="na">initState</span><span class="o">();</span>
    <span class="c1">// _helper.openDB();</span>
    <span class="c1">// _helper.insert(CountryQuery.TABLE_NAME, {"NAME":"Singapura"});</span>
    <span class="n">_helper</span><span class="o">.</span><span class="na">getData</span><span class="o">(</span><span class="n">CountryQuery</span><span class="o">.</span><span class="na">TABLE_NAME</span><span class="o">).</span><span class="na">then</span><span class="o">((</span><span class="n">value</span><span class="o">)</span> <span class="o">{</span>
      <span class="n">value</span><span class="o">.</span><span class="na">forEach</span><span class="o">((</span><span class="n">element</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Country</span> <span class="n">country</span> <span class="o">=</span> <span class="n">Country</span><span class="o">.</span><span class="na">fromJson</span><span class="o">(</span><span class="n">element</span><span class="o">);</span>
        <span class="n">print</span><span class="o">(</span><span class="n">country</span><span class="o">.</span><span class="na">toJson</span><span class="o">());</span>
      <span class="o">});</span>
    <span class="o">});</span>
  <span class="o">}</span>
</code></pre></div></div>
<p>dan jika hasilnya seperti dibawah ini, maka tandanya data kita sudah berhasil di insert ke locak DB kita..</p>

<p><img src="http://localhost:4000/assets/img/200914/get.png" alt="inser" /></p>

<p>Bagaimana temen-temen ? cukup mudah bukan <a href="">Tutorial Sqflite ini</a>..</p>

<p>Jika kalian ingin menlihat full code nya bisa dilihat di link berikut <a href="https://github.com/congfandi/simple_sqflite">GITHUB SOURCE</a></p>

<p>Sampai jumpa di tutorial selanjutnya‚Ä¶..</p>

<p><br />
<br /></p>
<blockquote>
  <p>Ngoding itu berat, tapi kamu pasti kuat!<small> - Penulis</small></p>
</blockquote>

:ET